name: Unit testing, formatting & linting

on:
  - push

jobs:
  testing-formatting-linting:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
        cache: 'pip'

      - name: Cache virtual environment
        uses: actions/cache@v3
        id: cache-pip-venv
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}

      - name: Install dependencies
        if: steps.cache-pip-venv.outputs.cache-hit != 'true'
        run: |
          # Check if venv exists (restored from secondary keys if any, and delete)
          if [ -d "venv" ]; then rm -rf venv; fi
          
          # Re-create the venv
          python3 -m venv venv
      
          # Activate venv
          source venv/bin/activate
          
          # Install test dependencies
          pip install --upgrade pip
          pip install -e ".[test]"

      - name: Run tests
        run: pytest tests/ -rP -vv

      - name: Run mypy
        run: mypy dbt_airflow/
